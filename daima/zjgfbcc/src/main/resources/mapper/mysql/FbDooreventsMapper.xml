<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.basic.zjgfbcc.dao.mysql.FbDooreventsDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.basic.zjgfbcc.entity.FbDoorevents" id="fbDooreventsMap">
        <result property="personName" column="personName"/>
        <result property="jobNo" column="jobNo"/>
        <result property="cardNo" column="cardNo"/>
        <result property="orgIndexCode" column="orgIndexCode"/>
        <result property="orgName" column="orgName"/>
        <result property="eventId" column="eventId"/>
        <result property="eventName" column="eventName"/>
        <result property="eventTime" column="eventTime"/>
        <result property="personId" column="personId"/>
        <result property="doorIndexCode" column="doorIndexCode"/>
        <result property="doorName" column="doorName"/>
    </resultMap>
    
    <select id="Statistics" resultType="map">
		select d.*,a.*,r.personName as userName,r.orgName as deptName,r.orgPath as deptPath from fb_doorevents d left join fb_areamenjin_relation a on d.doorIndexCode = a.doorIndexCode left join fb_renyuaninfo r on d.personId = r.personId 
		where a.doorIndexCode is NOT NULL and a.areaName = #{param1} and substring(d.eventTime,1,10) = CURDATE() and a.menJinGN = #{param2}
    </select>
    
    <select id="StatisticsCBS" resultType="map">
		select d.*,a.*,r.personName as userName,r.orgName as deptName,r.orgPath as deptPath from fb_doorevents d left join fb_areamenjin_relation a on d.doorIndexCode = a.doorIndexCode left join fb_renyuaninfo r on d.personId = r.personId 
		where a.doorIndexCode is NOT NULL and a.areaName = #{value} and substring(d.eventTime,1,10) = CURDATE() and r.orgPath like '%承包商%'
		union all 
		select d.*,a.*,r.personName as userName,r.orgName as deptName,r.orgPath as deptPath from fb_doorevents d left join fb_areamenjin_relation a on d.doorIndexCode = a.doorIndexCode left join fb_renyuaninfo r on d.personId = r.personId 
		where a.doorIndexCode is NOT NULL and a.areaName = #{value} and substring(d.eventTime,1,10) = DATE_SUB(curdate(),INTERVAL 1 DAY) and a.menJinGN = '入' and r.orgPath like '%承包商%'
    </select>

	<select id="getList" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
		select * from fb_doorevents t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by eventTime desc,row_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from fb_doorevents t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="personName != null and personName != ''"> and t.personName = #{personName} </if>
    		<if test="personNameVague != null and personNameVague != ''"> and t.personName like concat('%',#{personNameVague},'%') </if>
            <if test="jobNo != null and jobNo != ''"> and t.jobNo = #{jobNo} </if>
    		<if test="jobNoVague != null and jobNoVague != ''"> and t.jobNo like concat('%',#{jobNoVague},'%') </if>
            <if test="cardNo != null and cardNo != ''"> and t.cardNo = #{cardNo} </if>
    		<if test="cardNoVague != null and cardNoVague != ''"> and t.cardNo like concat('%',#{cardNoVague},'%') </if>
            <if test="orgIndexCode != null and orgIndexCode != ''"> and t.orgIndexCode = #{orgIndexCode} </if>
    		<if test="orgIndexCodeVague != null and orgIndexCodeVague != ''"> and t.orgIndexCode like concat('%',#{orgIndexCodeVague},'%') </if>
            <if test="orgName != null and orgName != ''"> and t.orgName = #{orgName} </if>
    		<if test="orgNameVague != null and orgNameVague != ''"> and t.orgName like concat('%',#{orgNameVague},'%') </if>
            <if test="eventId != null and eventId != ''"> and t.eventId = #{eventId} </if>
    		<if test="eventIdVague != null and eventIdVague != ''"> and t.eventId like concat('%',#{eventIdVague},'%') </if>
            <if test="eventName != null and eventName != ''"> and t.eventName = #{eventName} </if>
    		<if test="eventNameVague != null and eventNameVague != ''"> and t.eventName like concat('%',#{eventNameVague},'%') </if>
            <if test="eventTime != null and eventTime != ''"> and t.eventTime = #{eventTime} </if>
    		<if test="eventTimeVague != null and eventTimeVague != ''"> and t.eventTime like concat('%',#{eventTimeVague},'%') </if>
            <if test="personId != null and personId != ''"> and t.personId = #{personId} </if>
    		<if test="personIdVague != null and personIdVague != ''"> and t.personId like concat('%',#{personIdVague},'%') </if>
            <if test="doorIndexCode != null and doorIndexCode != ''"> and t.doorIndexCode = #{doorIndexCode} </if>
    		<if test="doorIndexCodeVague != null and doorIndexCodeVague != ''"> and t.doorIndexCode like concat('%',#{doorIndexCodeVague},'%') </if>
            <if test="doorName != null and doorName != ''"> and t.doorName = #{doorName} </if>
    		<if test="doorNameVague != null and doorNameVague != ''"> and t.doorName like concat('%',#{doorNameVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="com.basic.zjgfbcc.entity.FbDoorevents">
		insert into fb_doorevents
		(
		    `row_guid`,
			`create_time`,
			`del_flag`,
			`sort_sq`,
			`personName`, 
			`jobNo`, 
			`cardNo`, 
			`orgIndexCode`, 
			`orgName`, 
			`eventId`, 
			`eventName`, 
			`eventTime`, 
			`personId`, 
			`doorIndexCode`, 
			`doorName`
		)
		values
		(
		    #{rowGuid},
			#{createTime},
			#{delFlag},
			#{sortSq},
			#{personName}, 
			#{jobNo}, 
			#{cardNo}, 
			#{orgIndexCode}, 
			#{orgName}, 
			#{eventId}, 
			#{eventName}, 
			#{eventTime}, 
			#{personId}, 
			#{doorIndexCode}, 
			#{doorName}
		)
	</insert>
	
	<insert id="insertAll" parameterType="com.basic.zjgfbcc.entity.FbDoorevents">
		insert into fb_doorevents
		(
		    `row_guid`,
			`create_time`,
			`del_flag`,
			`sort_sq`,
			`personName`, 
			`jobNo`, 
			`cardNo`, 
			`orgIndexCode`, 
			`orgName`, 
			`eventId`, 
			`eventName`, 
			`eventTime`, 
			`personId`, 
			`doorIndexCode`, 
			`doorName`
		)
		values
		<foreach collection="list" item="time" separator=",">
		(
		    #{time.rowGuid},
			#{time.createTime},
			#{time.delFlag},
			#{time.sortSq},
			#{time.personName}, 
			#{time.jobNo}, 
			#{time.cardNo}, 
			#{time.orgIndexCode}, 
			#{time.orgName}, 
			#{time.eventId}, 
			#{time.eventName}, 
			#{time.eventTime}, 
			#{time.personId}, 
			#{time.doorIndexCode}, 
			#{time.doorName}
		)
        </foreach>
	</insert>
	 
	<update id="update" parameterType="com.basic.zjgfbcc.entity.FbDoorevents">
		update fb_doorevents 
		<set>
            <if test="createTime != null">`create_time` = #{createTime}, </if>
            <if test="delFlag != null">`del_flag` = #{delFlag}, </if>
            <if test="sortSq != null">`sort_sq` = #{sortSq}, </if>
			<if test="jobNo != null">`jobNo` = #{jobNo}, </if>
			<if test="cardNo != null">`cardNo` = #{cardNo}, </if>
			<if test="orgIndexCode != null">`orgIndexCode` = #{orgIndexCode}, </if>
			<if test="orgName != null">`orgName` = #{orgName}, </if>
			<if test="eventId != null">`eventId` = #{eventId}, </if>
			<if test="eventName != null">`eventName` = #{eventName}, </if>
			<if test="eventTime != null">`eventTime` = #{eventTime}, </if>
			<if test="personId != null">`personId` = #{personId}, </if>
			<if test="doorIndexCode != null">`doorIndexCode` = #{doorIndexCode}, </if>
			<if test="doorName != null">`doorName` = #{doorName}</if>
		</set>
        where row_guid = #{rowGuid}
	</update>
	
	<delete id="deleteBatch">
		delete from fb_doorevents  where row_guid in
		<foreach item="rowGuid" collection="array" open="(" separator="," close=")">
			#{rowGuid}
		</foreach>
	</delete>
	
	<delete id="deleteAll">
	    delete from fb_doorevents
	</delete>
	
	<delete id="deleteNowDays">
	    delete from fb_doorevents where substring(eventTime,1,10) = date_format(now(), '%Y-%m-%d')
	</delete> 
	
	<delete id="deleteSevenBe">
        delete from fb_doorevents where personId is null and doorIndexCode is null;
	    delete from fb_doorevents where substring(eventTime,1,10) <![CDATA[ <= ]]> DATE_SUB(date_format(now(), '%Y-%m-%d'),INTERVAL 3 DAY)
	</delete>

    <select id="getDetailByGuid" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
        select * from fb_doorevents where row_guid =#{rowGuid} and del_flag =0
    </select>

    <select id="getDetailByPara" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
        select * from fb_doorevents where ${para}=#{value} and del_flag =0
    </select>

    <select id="getQueryList" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
        select * from fb_doorevents t <include refid="where_clause" />
        order by row_id desc
    </select>
    <!--获取今天及昨天所有的入-->
	<select id="getEventListByRu" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
			select distinct a.personId,b.personName,b.orgName,a.eventTime from fb_doorevents a left join fb_renyuaninfo b on a.personId=b.personId where doorIndexCode in
		(select doorIndexCode from fb_areamenjin_relation where areaName=#{areaName} and menJinGN='入')
		and DATE_SUB(date_format(now(), '%Y-%m-%d'),INTERVAL 1 DAY) <![CDATA[ <= ]]> substring(eventTime,1,10) 	and b.personName is not null
		<if test="isCBS!='' and isCBS!=null">
			and (b.orgPath like '%承包商%' or b.orgPath like '%苏城孚宝%' or b.orgPath like '%保安%')
		</if>
		<if test="isVTZ!='' and isVTZ!=null">
			and (b.orgPath like '%罐区运营%' or b.orgPath like '%办公室%')
		</if>
		<if test="isKCSJ!='' and isKCSJ!=null">
			and b.orgPath like '%卡车司机%'
		</if>
		<if test="isFK!='' and isFK!=null">
			and (b.orgPath like '%政府访客VIP%' or b.orgPath like '%访客%' or b.orgPath like '%特检院%')
		</if>
		<if test="personName!='' and personName!=null">
			and b.personName like concat('%',#{personName},'%')
		</if>
		<if test="orgName!='' and orgName!=null">
			and b.orgName like concat('%',#{orgName},'%')
		</if>
	</select>

	<!--获取今天及昨天所有的出-->
	<select id="getEventListByChu" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
		select distinct personId,personName,orgName from fb_doorevents where doorIndexCode in
		(select doorIndexCode,doorName from fb_areamenjin_relation where areaName=#{areaName} and menJinGN='出')
		and DATE_SUB(curdate(),INTERVAL 1 DAY) <![CDATA[ <= ]]> substring(eventTime,1,10)
	</select>
	<!--获取今天及昨天所有实际的出-->
	<select id="getEventListByShiJiChu" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
		select distinct a.personId,b.personName,b.orgName,a.eventTime from fb_doorevents a left join fb_renyuaninfo b on a.personId=b.personId
		 where doorIndexCode in
(select doorIndexCode from fb_areamenjin_relation where areaName=#{areaName} and menJinGN='出')
and DATE_SUB(date_format(now(), '%Y-%m-%d'),INTERVAL 1 DAY) <![CDATA[ <= ]]> substring(eventTime,1,10) 	and b.personName is not null
and a.personId  in
(select distinct personId from fb_doorevents where doorIndexCode in
(select doorIndexCode from fb_areamenjin_relation where areaName=#{areaName} and menJinGN='入')
and DATE_SUB(date_format(now(), '%Y-%m-%d'),INTERVAL 1 DAY) <![CDATA[ <= ]]> substring(eventTime,1,10) 	and b.personName is not null)
		<if test="isCBS!='' and isCBS!=null">
			and (b.orgPath like '%承包商%' or b.orgPath like '%苏城孚宝%' or b.orgPath like '%保安%')
		</if>
		<if test="isVTZ!='' and isVTZ!=null">
			and (b.orgPath like '%罐区运营%' or b.orgPath like '%办公室%')
		</if>
		<if test="isKCSJ!='' and isKCSJ!=null">
			and b.orgPath like '%卡车司机%'
		</if>
		<if test="isFK!='' and isFK!=null">
			and (b.orgPath like '%政府访客VIP%' or b.orgPath like '%访客%' or b.orgPath like '%特检院%')
		</if>
		<if test="personName!='' and personName!=null">
			and b.personName like concat('%',#{personName},'%')
		</if>
		<if test="orgName!='' and orgName!=null">
			and b.orgName like concat('%',#{orgName},'%')
		</if>
	</select>

	<select id="getLastDataById" resultType="com.basic.zjgfbcc.entity.FbDoorevents">
		select * from fb_doorevents where personId=#{personId}
		order by eventTime desc limit 1
	</select>
</mapper>